The process for automatically crossbuilding libraries now has three steps:

 * live-build calls build-uqm-dependencies.chroot, which sets up the environment,
   builds a bin/ directory for the cross toolchain (used by less enlightened
   build systems, including UQM's build system) and executes the next two steps.

 * build-uqm-depencencies.chroot calls depengine.py with a list of needed
   libraries. depengine.py resolves dependencies (making sure all libraries
   have their dependencies installed before we try to build them), and writes
   a list of build scripts to a temporary file.

 * Finally, we abuse head/tail and command substitution to run each build script
   specified in the temporary file. These build scripts each download, build,
   and install one library.

The build scripts themselves are modularized; there are two generic functions
(basic_autotools_lib and basic_cmake_lib) which can build most normal libraries
using autohell and cmake, respectively, and a number of sub-functions which are
used in these generic functions and directly in build scripts for... special
libraries. See crossbuild.subr for details.
